function [xdata, ydata] = Unit_Plots_2D(all_data,cell_types,plot_level,vars,var_names)
% Plots two single-unit metrics for each mouse, for each group, or all
% units together. Always color-coded by cell type.
%
% INPUTS
% - all_data: struct generated by Shashwat's script
%       "a2_post_sorted_data_structure.m"
% - cell_types: cell array of cell types in order. Stored in the project
%       folder alongside all_data.mat.
% - plot_level: 'mouse' to create a figure for each mouse, 'group' to
%       create a figure for each group, and 'all' to put all units in one 
%       figure.
% - vars: cell array of field names from all_data to use as data, in the
%       form {'x','y'}. 
%       Example: {'TroughToPeak_duration','MeanFR_total'}
% - var_names: cell array of labels for the variables in vars.
%       Example: {'Trough-to-Peak Duration (ms)','Firing Rate (Hz)'}

groupNames = fieldnames(all_data);
colors = brewermap(length(cell_types),'Set2');

if strcmp(plot_level,'all')
    xdata = [];
    ydata = [];
    cdata = {};
    groupsLabels = {};
    mouseLabels = {};
    cellID_Labels = {};
end

for groupNum = 1:length(groupNames)
    groupName = groupNames{groupNum};
    mouseNames = fieldnames(all_data.(groupName));

    if strcmp(plot_level,'group')
        xdata = [];
        ydata = [];
        cdata = {};
        groupsLabels = {};
        mouseLabels = {};
        cellID_Labels = {};
    end

    for mouseNum = 1:length(mouseNames)
        mouseName = mouseNames{mouseNum};
        cellIDs = fieldnames(all_data.(groupName).(mouseName));

        if strcmp(plot_level,'mouse')
            xdata = [];
            ydata = [];
            cdata = {};
            groupsLabels = {};
            mouseLabels = {};
            cellID_Labels = {};
        end

        for cellID_num = 1:length(cellIDs)
            cellID = cellIDs{cellID_num};
            isSingleUnit = all_data.(groupName).(mouseName).(cellID).IsSingleUnit;
            thisCellType = all_data.(groupName).(mouseName).(cellID).Cell_Type;

            if isSingleUnit && any(strcmp(cell_types, thisCellType))
                % get x, y, z, and c data
                xdata(end+1,1) = all_data.(groupName).(mouseName).(cellID).(vars{1});
                ydata(end+1,1) = all_data.(groupName).(mouseName).(cellID).(vars{2});
                %ydata(end+1,1) = all_data.(groupName).(mouseName).(cellID).BurstsInfo.num_bursts;
                cdata{end+1,1} = thisCellType;
                groupsLabels{end+1,1} = groupName;
                mouseLabels{end+1,1} = mouseName;
                cellID_Labels{end+1,1} = cellID;
            end
        end

        if strcmp(plot_level,'mouse') % plot per mouse
            figure('Resize','off');
            grid on

            hold on
            for k = 1:length(cell_types)
                ind = find(strcmp(cdata,cell_types{k}));
    
                if isempty(ind)
                    scatter(NaN,NaN,'filled','color',colors(k,:));
                else
                    scatter(xdata(ind),ydata(ind),'filled','color',colors(k,:));
                end
            end
    
            legend(cell_types);
    
            xlabel(var_names{1});
            ylabel(var_names{2});
    
%             set(gca,'XDir','reverse');
%             set(gca,'YDir','reverse');
    
            title(gca,strcat(groupName,", ",mouseName), 'Interpreter','none');
        end

    end

    if strcmp(plot_level,'group') % Plot per group
        figure();
        grid on

        hold on
        for k = 1:length(cell_types)
            ind = find(strcmp(cdata,cell_types{k}));

            if isempty(ind)
                scatter(NaN,NaN,'filled','color',colors(k,:));
            else
                scatter(xdata(ind),ydata(ind),'filled','color',colors(k,:));
            end
        end

        legend(cell_types);

        xlabel(var_names{1});
        ylabel(var_names{2});

        title(gca, groupName, 'Interpreter','none');
    end

end

if strcmp(plot_level,'all') % Single plot for whole project
    figure();
    grid on

    hold on
    for k = 1:length(cell_types)
        ind = find(strcmp(cdata,cell_types{k}));

        if isempty(ind)
            s = scatter(NaN,NaN,'filled','color',colors(k,:));
        else
            s = scatter(xdata(ind), ydata(ind), 'filled', 'color',colors(k,:));
        end

        s.DataTipTemplate.DataTipRows(1).Label = var_names{1};
        s.DataTipTemplate.DataTipRows(2).Label = var_names{2};
        s.DataTipTemplate.DataTipRows(end+1:end+3) = [dataTipTextRow("Group: ", groupsLabels(ind)), ...
            dataTipTextRow("Mouse: ", mouseLabels(ind)), ...
            dataTipTextRow("Cell: ", cellID_Labels(ind))];
        s.DataTipTemplate.set('Interpreter','none');
    end

    legend(cell_types);

    xlabel(var_names{1});
    ylabel(var_names{2});
end

end

